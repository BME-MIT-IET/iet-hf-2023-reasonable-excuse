package com.operativ_tarsulat.model;

import com.operativ_tarsulat.view.CityObserver;

import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : City.java
//  @ Date : 2022. 03. 19.
//  @ Author : 
//
//




public class City extends Field implements Serializable {
    private List<Building> buildings;

	/**
	 * @return The description of the class
	 */
	public String toString(){
		String s = new String();
		for (Building b:buildings){
			s = s+b.toString()+" ";
		}
		return "City, buildings in the city: "+s+"virologists in the city: "+super.toString();
	}

    public City(List<Building> buildings)
    {
    	Skeleton.LogFunctionCall("City ctr");
    	this.buildings = buildings;
		AddObserver(new CityObserver(this));
    	Skeleton.LogReturn();
    }
    public City() {
		buildings = new LinkedList<>();
		AddObserver(new CityObserver(this));
	}
    public List<Building> GetBuildings() {
    	Skeleton.LogFunctionCall(new Object() {}.getClass().getEnclosingMethod().getName());
    	Skeleton.LogReturn(buildings.toString());
    	return buildings;
    	
    }
    
    public void Interact(Virologist v) {
    	Skeleton.LogFunctionCall(new Object() {}.getClass().getEnclosingMethod().getName(),v.getName(),v.getClass().getName());
    	for(int i = 0;i<buildings.size();i++)
    	{
    		buildings.get(i).Interact(v);
    	}
    	Skeleton.LogReturn();
    }
    public void AddBuilding(Building b) {
    	Skeleton.LogFunctionCall(new Object() {}.getClass().getEnclosingMethod().getName(),b.getClass().getName());
    	buildings.add(b);
    	Skeleton.LogReturn();
    }
}
